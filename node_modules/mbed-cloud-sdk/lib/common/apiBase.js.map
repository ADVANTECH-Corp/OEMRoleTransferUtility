{"version":3,"sources":["common/apiBase.ts"],"names":[],"mappings":"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","file":"apiBase.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport superagent = require(\"superagent\");\nimport { SDKError } from \"./sdkError\";\n\n// tslint:disable-next-line:no-var-requires\nconst packageInformation = require(\"../../package.json\");\nconst DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\nconst JSON_REGEX = /^application\\/json(;.*)?$/i;\nconst MIME_REGEX = /^text\\/plain(;.*)?$/i;\nconst VERSION = packageInformation.is_published ? packageInformation.version : `${packageInformation.version}+dev`;\nconst userAgent = `${packageInformation.name}-javascript / ${VERSION}`;\n\nexport class ApiBase {\n\n    private apiKey = \"\";\n\n    constructor(apiKey?: string, private host: string = \"https://api.us-east-1.mbedcloud.com\", private responseHandler: (sdkError: SDKError, response: superagent.Response) => any = null) {\n        if (apiKey && apiKey.substr(0, 6).toLowerCase() !== \"bearer\") apiKey = `Bearer ${apiKey}`;\n        this.apiKey = apiKey;\n    }\n\n    /**\n     * Normalizes parameter values:\n     * <ul>\n     * <li>remove nils</li>\n     * <li>keep files and arrays</li>\n     * <li>format to string with `paramToString` for other cases</li>\n     * </ul>\n     * @param {Object.<String, Object>} params The parameters as object properties.\n     * @returns {Object.<String, Object>} normalized parameters.\n     */\n    private static normalizeParams(params: any) {\n        const newParams = {};\n\n        for (const key in params) {\n            if (params.hasOwnProperty(key) && params[key] !== undefined && params[key] !== null) {\n                const value = params[key];\n                if (this.isFileParam(value) || Array.isArray(value)) {\n                    newParams[key] = value;\n                } else {\n                    newParams[key] = ApiBase.paramToString(value);\n                }\n            }\n        }\n\n        return newParams;\n    }\n\n    /**\n     * Checks whether the given parameter value represents file-like content.\n     * @param param The parameter to check.\n     * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n     */\n    private static isFileParam(param: any) {\n        // fs.ReadStream in Node.js (but not in runtime like browserify)\n        if (typeof window === \"undefined\" &&\n            typeof require === \"function\" &&\n            require(\"fs\") &&\n            param instanceof require(\"fs\").ReadStream) {\n            return true;\n        }\n\n        // Buffer in Node.js\n        if (typeof Buffer === \"function\" && param instanceof Buffer) {\n            return true;\n        }\n\n        // Blob in browser\n        if (typeof Blob === \"function\" && param instanceof Blob) {\n            return true;\n        }\n\n        // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n        if (typeof File === \"function\" && param instanceof File) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns a string representation for an actual parameter.\n     * @param param The actual parameter.\n     * @returns {String} The string representation of <code>param</code>.\n     */\n    private static paramToString(param: any) {\n        if (param === undefined || param === null) {\n            return \"\";\n        }\n\n        if (param instanceof Date) {\n            return param.toJSON();\n        }\n\n        return param.toString();\n    }\n\n    private static chooseType(types: Array<string>, defaultType: string = null): string {\n        // No type\n        if (!types.length) return defaultType;\n\n        // Default to first entry or default\n        let result = types[0] || defaultType;\n\n        // Find first preferred type\n        types.some(type => {\n            if (MIME_REGEX.test(type)) {\n                result = type;\n                return true;\n            }\n        });\n\n        return result;\n    }\n\n    private static debugLog(title: string, obj: any) {\n        if (process && process.env && process.env.DEBUG === \"superagent\") {\n            process.stdout.write(`  \\x1b[1m\\x1b[35msuperagent\\x1b[0m ${title.toUpperCase()} `);\n            // tslint:disable-next-line:no-console\n            console.log(obj);\n        }\n    }\n\n    protected request<T>(options: { url: string, method: string, headers: { [key: string]: string }, query: {}, formParams: {}, useFormData: boolean, contentTypes: Array<string>, acceptTypes: Array<string>, requestOptions?: { [key: string]: any }, body?: any, file?: boolean }, callback?: (sdkError: SDKError, data: T) => any): superagent.SuperAgentRequest {\n\n        // Allow overrides\n        const requestOptions = options.requestOptions || {};\n        requestOptions.timeout = requestOptions.timeout || 60000;\n        requestOptions.method = requestOptions.method || options.method;\n        requestOptions.query = requestOptions.query || ApiBase.normalizeParams(options.query);\n        requestOptions.headers = requestOptions.headers || ApiBase.normalizeParams(options.headers);\n        requestOptions.acceptHeader = requestOptions.acceptHeader || ApiBase.chooseType(options.acceptTypes);\n        requestOptions.url = requestOptions.url || options.url.replace(/([:])?\\/+/g, ($0, $1) => {\n            return $1 ? $0 : \"/\";\n        });\n\n        const request = superagent(requestOptions.method, this.host + requestOptions.url);\n\n        // set query parameters\n        request.query(requestOptions.query);\n\n        // set header parameters\n        requestOptions.headers.Authorization = this.apiKey;\n        requestOptions.headers[\"User-Agent\"] = userAgent;\n        request.set(requestOptions.headers);\n\n        // set request timeout\n        request.timeout(requestOptions.timeout);\n\n        // set accept header\n        if (requestOptions.acceptHeader) {\n            request.accept(requestOptions.acceptHeader);\n        }\n\n        let body = null;\n        if (Object.keys(options.formParams).length > 0) {\n            if (options.useFormData) {\n                const formParams = ApiBase.normalizeParams(options.formParams);\n                for (const key in formParams) {\n                    if (formParams.hasOwnProperty(key)) {\n                        if (ApiBase.isFileParam(formParams[key])) {\n                            // file field\n                            request.attach(key, formParams[key]);\n                        } else {\n                            request.field(key, formParams[key]);\n                        }\n                    }\n                }\n            } else {\n                requestOptions.contentType = requestOptions.contentType || \"application/x-www-form-urlencoded\";\n                request.type(requestOptions.contentType);\n                request.send(ApiBase.normalizeParams(options.formParams));\n            }\n        } else if (options.body) {\n\n            body = options.body;\n\n            // set content type header\n            requestOptions.contentType = requestOptions.contentType || ApiBase.chooseType(options.contentTypes, \"application/json\");\n            request.type(requestOptions.contentType);\n\n            // Remove empty or undefined json parameters\n            if (body && body.constructor === {}.constructor && JSON_REGEX.test(requestOptions.contentType)) {\n                body = Object.keys(body).reduce((val, key) => {\n                    if (body[key] !== null && body[key] !== undefined) val[key] = body[key];\n                    return val;\n                }, {});\n            }\n\n            request.send(body);\n        }\n\n        if (body) ApiBase.debugLog(\"body\", body);\n\n        request.end((error, response) => {\n            this.complete(error, response, requestOptions.acceptHeader, callback);\n        });\n\n        return request;\n    }\n\n    protected complete(error: any, response: any, acceptHeader: string, callback?: (sdkError: SDKError, data) => any) {\n        let sdkError = null;\n\n        if (error) {\n            let message = error.message;\n            let innerError = error;\n            let details = \"\";\n\n            if (response) {\n                if (response.error) message = response.error.message;\n                if (response.body && response.body.message) {\n                    message = response.body.message;\n                    if (message.error) message = message.error;\n                }\n                innerError = response.error || error;\n                details = response.body || response.text;\n            }\n\n            sdkError = new SDKError(message, innerError, details, error.status);\n        }\n\n        if (this.responseHandler) {\n            this.responseHandler(sdkError, response);\n        }\n\n        if (callback) {\n            let data = null;\n\n            if (response && !sdkError) {\n                data = response.body || response.text;\n            }\n\n            // If an object has been returned and we expected json\n            if (data && data.constructor === {}.constructor && JSON_REGEX.test(acceptHeader)) {\n                data = JSON.parse(JSON.stringify(data), (_key, value) => {\n                    // Check for date\n                    if (DATE_REGEX.test(value)) return new Date(value);\n                    return value;\n                });\n            }\n\n            callback(sdkError, data);\n        }\n    }\n}\n"],"sourceRoot":"../../src"}