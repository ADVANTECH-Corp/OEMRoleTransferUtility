{"version":3,"sources":["update/models/campaignDeviceState.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;;AAIF;;GAEG;AACH;IA2CI,6BAAY,IAAmC;QAC3C,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC;QACL,CAAC;IACL,CAAC;IACL,0BAAC;AAAD,CAlDA,AAkDC,IAAA;AAlDY,kDAAmB","file":"campaignDeviceState.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { CampaignDeviceStateEnum } from \"../types\";\n\n/**\n * Campaign Device State\n */\nexport class CampaignDeviceState {\n\n    /**\n     * The id of the metadata record\n     */\n    public readonly id?: string;\n    /**\n     * The id of the device\n     */\n    public readonly deviceId?: string;\n    /**\n     * The id of the campaign the device is in\n     */\n    public readonly campaignId?: string;\n    /**\n     * The state of the update campaign on the device\n     */\n    public readonly state?: CampaignDeviceStateEnum;\n    /**\n     * The name of the device\n     */\n    public readonly name?: string;\n    /**\n     * Description of the device\n     */\n    public readonly description?: string;\n    /**\n     * The timestamp of when this record was created in the database\n     */\n    public readonly createdAt?: Date;\n    /**\n     * The timestamp of when this record was modified in the database\n     */\n    public readonly updatedAt?: Date;\n    /**\n     * The mechanism used to deliver the firmware (connector or direct)\n     */\n    public readonly mechanism?: string;\n    /**\n     * The URL of cloud connect used\n     */\n    public readonly mechanismUrl?: string;\n\n    constructor(init?: Partial<CampaignDeviceState>) {\n        for (const key in init) {\n            if (init.hasOwnProperty(key)) {\n                this[key] = init[key];\n            }\n        }\n    }\n}\n"],"sourceRoot":"../../../src"}