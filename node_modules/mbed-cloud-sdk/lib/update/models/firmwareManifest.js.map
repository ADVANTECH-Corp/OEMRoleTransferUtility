{"version":3,"sources":["update/models/firmwareManifest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;;AAEF,oDAAoD;AAKpD;;GAEG;AACH;IA+BI,0BAAY,IAAgC,EAAU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClE,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC;QACL,CAAC;IACL,CAAC;IAYM,iCAAM,GAAb,UAAc,QAA2B;QAAzC,iBAIC;QAHG,MAAM,CAAC,sBAAU,CAAC,UAAA,IAAI;YAClB,KAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACpD,CAAC,EAAE,QAAQ,CAAC,CAAC;IACjB,CAAC;IACL,uBAAC;AAAD,CAtDA,AAsDC,IAAA;AAtDY,4CAAgB","file":"firmwareManifest.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { asyncStyle } from \"../../common/functions\";\nimport { CallbackFn } from \"../../common/interfaces\";\nimport { FirmwareManifestObject } from \"../types\";\nimport { UpdateApi } from \"../updateApi\";\n\n/**\n * Firmware Manifest\n */\nexport class FirmwareManifest {\n\n    /**\n     * The ID of the firmware manifest\n     */\n    public readonly id: string;\n    /**\n     * The URL of the firmware manifest\n     */\n    public readonly url: string;\n    /**\n     * Size of the datafile (in bytes)\n     */\n    public readonly datafileSize?: number;\n    /**\n     * The class of device\n     */\n    public readonly deviceClass?: string;\n    /**\n     * The timestamp when the object was created\n     */\n    public readonly createdAt: Date;\n    /**\n     * The timestamp the object was updated\n     */\n    public readonly updatedAt: Date;\n    /**\n     * The version of the firmware manifest (as a timestamp)\n     */\n    public readonly timestamp: Date;\n\n    constructor(init?: Partial<FirmwareManifest>, private _api?: UpdateApi) {\n        for (const key in init) {\n            if (init.hasOwnProperty(key)) {\n                this[key] = init[key];\n            }\n        }\n    }\n\n    /**\n     * Delete the firmware manifest\n     * @returns Promise containing any error\n     */\n    public delete(): Promise<void>;\n    /**\n     * Delete the firmware manifest\n     * @param callback A function that is passed any error\n     */\n    public delete(callback: CallbackFn<void>): void;\n    public delete(callback?: CallbackFn<void>): Promise<void> {\n        return asyncStyle(done => {\n            this._api.deleteFirmwareManifest(this.id, done);\n        }, callback);\n    }\n}\nexport interface FirmwareManifest extends FirmwareManifestObject {}\n"],"sourceRoot":"../../../src"}