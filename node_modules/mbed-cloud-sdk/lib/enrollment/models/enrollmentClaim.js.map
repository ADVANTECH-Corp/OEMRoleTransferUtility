{"version":3,"sources":["enrollment/models/enrollmentClaim.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAKH,oDAAoD;AAEpD;IA0BI,yBAAY,IAA8B,EAAmB,IAAmB;QAAhF,iBAIC;QAJ4D,SAAI,GAAJ,IAAI,CAAe;QAC5E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;YACzB,KAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAYM,gCAAM,GAAb,UAAc,QAA2B;QAAzC,iBAIC;QAHG,MAAM,CAAC,sBAAU,CAAC,UAAA,IAAI;YAClB,KAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACnD,CAAC,EAAE,QAAQ,CAAC,CAAC;IACjB,CAAC;IACL,sBAAC;AAAD,CA/CA,AA+CC,IAAA;AA/CY,0CAAe","file":"enrollmentClaim.js","sourcesContent":["/*\n * Mbed Cloud JavaScript SDK\n * Copyright Arm Limited 2018\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AddEnrollmentClaim } from \"../types\";\nimport { EnrollmentApi } from \"../enrollmentApi\";\nimport { CallbackFn } from \"../../common/interfaces\";\nimport { asyncStyle } from \"../../common/functions\";\n\nexport class EnrollmentClaim {\n    /**\n     * Enrollment internal id.\n     */\n    public readonly id: string;\n    /**\n     * muid\n     */\n    public readonly accountId: string;\n    /**\n     * The time of the enrollment identity creation.\n     */\n    public readonly createdAt: Date;\n    /**\n     * The time of claiming the device to the account\n     */\n    public readonly claimedAt?: Date;\n    /**\n     * The id of the device in the device directory once it has been registered\n     */\n    public readonly deviceId?: string;\n    /**\n     * The enrollment claim expiration time. If the device does not connect to Mbed Cloud before the expiration, the claim is removed without a separate notice.\n     */\n    public readonly expiresAt: Date;\n\n    constructor(init: Partial<EnrollmentClaim>, private readonly _api: EnrollmentApi) {\n        Object.keys(init).forEach(key => {\n            this[key] = init[key];\n        });\n    }\n\n    /**\n     * Delete this enrollment claim.\n     * @returns Promise containing any error\n     */\n    public delete(): Promise<void>;\n    /**\n     * Delete this enrollment claim.\n     * @param callback A function that is passed any error\n     */\n    public delete(callback: CallbackFn<void>): void;\n    public delete(callback?: CallbackFn<void>): Promise<void> {\n        return asyncStyle(done => {\n            this._api.deleteEnrollmentClaim(this.id, done);\n        }, callback);\n    }\n}\n\nexport interface EnrollmentClaim extends AddEnrollmentClaim { }\n"],"sourceRoot":"../../../src"}