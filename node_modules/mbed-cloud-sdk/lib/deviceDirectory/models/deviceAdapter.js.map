{"version":3,"sources":["deviceDirectory/models/deviceAdapter.ts"],"names":[],"mappings":"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","file":"deviceAdapter.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport {\n    DeviceData as apiDevice,\n    DeviceDataPostRequest as apiDeviceAdd,\n    DeviceDataPutRequest as apiDeviceUpdate\n} from \"../../_api/device_directory\";\nimport { DeviceDirectoryApi } from \"../deviceDirectoryApi\";\nimport { AddDeviceObject, UpdateDeviceObject } from \"../types\";\nimport { Device } from \"./device\";\n\n/**\n * Device Adapter\n */\nexport class DeviceAdapter {\n\n    public static map(from: apiDevice, api: DeviceDirectoryApi): Device {\n        return new Device({\n            accountId:                         from.account_id,\n            bootstrappedTimestamp:             from.bootstrapped_timestamp,\n            createdAt:                         from.created_at,\n            customAttributes:                  from.custom_attributes,\n            description:                       from.description,\n            deviceClass:                       from.device_class,\n            id:                                from.id,\n            mechanism:                         from.mechanism,\n            mechanismUrl:                      from.mechanism_url,\n            name:                              from.name,\n            serialNumber:                      from.serial_number,\n            state:                             from.state,\n            updatedAt:                         from.updated_at,\n            vendorId:                          from.vendor_id,\n            alias:                             from.endpoint_name,\n            bootstrapCertificateExpiration:    from.bootstrap_expiration_date,\n            certificateFingerprint:            from.device_key,\n            certificateIssuerId:               from.ca_id,\n            connectorCertificateExpiration:    from.connector_expiration_date,\n            deviceExecutionMode:               from.device_execution_mode,\n            firmwareChecksum:                  from.firmware_checksum,\n            manifestTimestamp:                 from.manifest_timestamp,\n            hostGateway:                       from.host_gateway,\n            deviceType:                        from.endpoint_type,\n            claimedAt:                         from.enrolment_list_timestamp,\n        }, api);\n    }\n\n    public static addMap(from: AddDeviceObject): apiDeviceAdd {\n        return {\n            name:                         from.name,\n            vendor_id:                    from.vendorId,\n            custom_attributes:            from.customAttributes,\n            mechanism:                    from.mechanism,\n            device_class:                 from.deviceClass,\n            mechanism_url:                from.mechanismUrl,\n            serial_number:                from.serialNumber,\n            description:                  from.description,\n            bootstrap_expiration_date:    from.bootstrapCertificateExpiration,\n            bootstrapped_timestamp:       from.bootstrappedTimestamp,\n            ca_id:                        from.certificateIssuerId,\n            connector_expiration_date:    from.connectorCertificateExpiration,\n            device_execution_mode:        from.deviceExecutionMode,\n            device_key:                   from.certificateFingerprint,\n            endpoint_name:                from.alias,\n            firmware_checksum:            from.firmwareChecksum,\n            state:                        from.state,\n            host_gateway:                 from.hostGateway,\n            endpoint_type:                from.deviceType,\n        };\n    }\n\n    public static updateMap(from: UpdateDeviceObject): apiDeviceUpdate {\n        return {\n            name:                         from.name,\n            custom_attributes:            from.customAttributes,\n            description:                  from.description,\n            ca_id:                        from.certificateIssuerId,\n            device_key:                   from.certificateFingerprint,\n            endpoint_name:                from.alias,\n            host_gateway:                 from.hostGateway,\n            endpoint_type:                from.deviceType,\n        };\n    }\n}\n"],"sourceRoot":"../../../src"}