{"version":3,"sources":["deviceDirectory/models/query.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;;AAGF,oDAAoD;AAIpD;;GAEG;AACH;IAeI,eAAY,IAAqB,EAAU,IAAyB;QAAzB,SAAI,GAAJ,IAAI,CAAqB;QAChE,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC;QACL,CAAC;IACL,CAAC;IAYM,sBAAM,GAAb,UAAc,QAA4B;QAA1C,iBAIC;QAHG,MAAM,CAAC,sBAAU,CAAC,UAAA,IAAI;YAClB,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAI,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACjB,CAAC;IAYM,sBAAM,GAAb,UAAc,QAA2B;QAAzC,iBAIC;QAHG,MAAM,CAAC,sBAAU,CAAC,UAAA,IAAI;YAClB,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACzC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACjB,CAAC;IACL,YAAC;AAAD,CAtDA,AAsDC,IAAA;AAtDY,sBAAK","file":"query.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { CallbackFn } from \"../../common/interfaces\";\nimport { asyncStyle } from \"../../common/functions\";\nimport { AddQueryObject } from \"../types\";\nimport { DeviceDirectoryApi } from \"../deviceDirectoryApi\";\n\n/**\n * Query\n */\nexport class Query {\n\n    /**\n     * The ID of the query\n     */\n    public readonly id: string;\n    /**\n     * The timestamp of when the query was created\n     */\n    public readonly createdAt?: Date;\n    /**\n     * The timestamp when the query was updated\n     */\n    public readonly updatedAt?: Date;\n\n    constructor(init?: Partial<Query>, private _api?: DeviceDirectoryApi) {\n        for (const key in init) {\n            if (init.hasOwnProperty(key)) {\n                this[key] = init[key];\n            }\n        }\n    }\n\n    /**\n     * Update the query\n     * @returns Promise of query\n     */\n    public update(): Promise<Query>;\n    /**\n     * Update the query\n     * @param callback A function that is passed the arguments (error, query)\n     */\n    public update(callback: CallbackFn<Query>): void;\n    public update(callback?: CallbackFn<Query>): Promise<Query> {\n        return asyncStyle(done => {\n            this._api.updateQuery(this, done);\n        }, callback);\n    }\n\n    /**\n     * Delete the query\n     * @returns Promise containing any error\n     */\n    public delete(): Promise<void>;\n    /**\n     * Delete the query\n     * @param callback A function that is passed any error\n     */\n    public delete(callback: CallbackFn<void>): void;\n    public delete(callback?: CallbackFn<void>): Promise<void> {\n        return asyncStyle(done => {\n            this._api.deleteQuery(this.id, done);\n        }, callback);\n    }\n}\nexport interface Query extends AddQueryObject {}\n"],"sourceRoot":"../../../src"}