{"version":3,"sources":["certificates/types.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE","file":"types.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { ListOptions, ComparisonObject } from \"../common/interfaces\";\n\nexport type CertificateTypeEnum = \"developer\" | \"lwm2m\" | \"bootstrap\";\nexport type CertificateStatusEnum = \"ACTIVE\" | \"INACTIVE\";\n\n/**\n * This object represents a developer certificate\n */\nexport interface AddDeveloperCertificateObject {\n    /**\n     * Certificate name\n     */\n    name: string;\n    /**\n     * Certificate description\n     */\n    description?: string;\n}\n\n/**\n * This object represents a certificate\n */\nexport interface AddCertificateObject extends AddDeveloperCertificateObject {\n    /**\n     * Certificate type\n     */\n    type: CertificateTypeEnum;\n    /**\n     * X509.v3 CA certificate in PEM or base64 encoded DER format\n     */\n    certificateData: string;\n    /**\n     * Base64 encoded signature of the account ID signed by the certificate to be uploaded. Signature must be hashed with SHA256\n     */\n    signature: string;\n    /**\n     * Status of the certificate\n     */\n    status?: CertificateStatusEnum;\n    /**\n     * If true, signature parameter is not required. Default value is false.\n     */\n    enrollmentMode?: boolean;\n}\n\n/**\n * This object represents a certificate\n */\nexport interface UpdateCertificateObject {\n    /**\n     * Certificate ID\n     */\n    id: string;\n    /**\n     * Certificate name\n     */\n    name?: string;\n    /**\n     * Certificate description\n     */\n    description?: string;\n    /**\n     * Certificate type\n     */\n    type?: CertificateTypeEnum;\n    /**\n     * X509.v3 CA certificate in PEM or base64 encoded DER format\n     */\n    certificateData?: string;\n    /**\n     * Base64 encoded signature of the account ID signed by the certificate to be uploaded. Signature must be hashed with SHA256\n     */\n    signature?: string;\n    /**\n     * Status of the certificate\n     */\n    status?: CertificateStatusEnum;\n    /**\n     * If true, signature parameter is not required. Default value is false.\n     */\n    enrollmentMode?: boolean;\n}\n\n/**\n * Options to use when listing certificates\n */\nexport interface CertificateListOptions extends ListOptions {\n    /**\n     * The certificate filter\n     *\n     * Constructed like so:\n     *  ```JavaScript\n     *  filter: {\n     *    type: { $eq: \"developer\" }\n     *  }\n     *  ```\n     */\n    filter?: {\n        /**\n         * Certificate type filter\n         */\n        type: ComparisonObject<CertificateTypeEnum>;\n        /**\n         * Certificate type not equals filter\n         */\n        typeNeq: ComparisonObject<CertificateTypeEnum>;\n        /**\n         * Expire filter in days\n         */\n        expires: ComparisonObject<number>;\n        /**\n         * Owner filter\n         */\n        ownerId: ComparisonObject<string>;\n        /**\n         * Name filter\n         */\n        name: ComparisonObject<string>;\n        /**\n         * Enrollment mode filter\n         */\n        enrollmentMode: ComparisonObject<boolean>;\n        /**\n         * Issuer filter\n         */\n        issuer: ComparisonObject<string>\n        /**\n         * Subject filter\n         */\n        subject: ComparisonObject<string>\n    };\n}\n"],"sourceRoot":"../../src"}