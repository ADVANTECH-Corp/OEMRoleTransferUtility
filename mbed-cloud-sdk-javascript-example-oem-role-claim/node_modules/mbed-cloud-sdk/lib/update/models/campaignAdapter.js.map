{"version":3,"sources":["update/models/campaignAdapter.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;;AAEF,oDAAoE;AAMpE,yDAAwD;AAGxD,uCAAsC;AAEtC;;GAEG;AACH;IAAA;IA0CA,CAAC;IAxCiB,mBAAG,GAAjB,UAAkB,IAAiB,EAAE,GAAc;QAC/C,MAAM,CAAC,IAAI,mBAAQ,CAAC;YAChB,YAAY,EAAS,wBAAY,CAAC,IAAI,CAAC,aAAa,EAAE,iBAAO,CAAC,iBAAiB,EAAE,iBAAO,CAAC,cAAc,CAAC;YACxG,SAAS,EAAY,IAAI,CAAC,UAAU;YACpC,WAAW,EAAU,IAAI,CAAC,WAAW;YACrC,UAAU,EAAW,IAAI,CAAC,QAAQ;YAClC,EAAE,EAAmB,IAAI,CAAC,EAAE;YAC5B,UAAU,EAAW,IAAI,CAAC,gBAAgB;YAC1C,WAAW,EAAU,IAAI,CAAC,iBAAiB;YAC3C,IAAI,EAAiB,IAAI,CAAC,IAAI;YAC9B,SAAS,EAAY,IAAI,CAAC,UAAU;YACpC,KAAK,EAAgB,IAAI,CAAC,KAAK;YAC/B,WAAW,EAAU,IAAI,CAAC,IAAI;YAC9B,SAAS,EAAY,IAAI,CAAC,UAAU;SACvC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAEa,sBAAM,GAApB,UAAqB,IAAuB;QACxC,MAAM,CAAC;YACH,WAAW,EAAU,IAAI,CAAC,WAAW;YACrC,aAAa,EAAQ,wBAAY,CAAC,IAAI,CAAC,YAAY,EAAE,iBAAO,CAAC,iBAAiB,EAAE,iBAAO,CAAC,cAAc,CAAC,IAAI,IAAI;YAC/G,IAAI,EAAiB,IAAI,CAAC,IAAI;YAC9B,gBAAgB,EAAK,IAAI,CAAC,UAAU;YACpC,KAAK,EAAgB,IAAI,CAAC,KAAK;YAC/B,IAAI,EAAiB,IAAI,CAAC,WAAW;YACrC,MAAM,EAAe,IAAI,CAAC,MAAM;SACnC,CAAC;IACN,CAAC;IAEa,yBAAS,GAAvB,UAAwB,IAA0B;QAC9C,MAAM,CAAC;YACH,WAAW,EAAU,IAAI,CAAC,WAAW;YACrC,aAAa,EAAQ,wBAAY,CAAC,IAAI,CAAC,YAAY,EAAE,iBAAO,CAAC,iBAAiB,EAAE,iBAAO,CAAC,cAAc,CAAC,IAAI,IAAI;YAC/G,IAAI,EAAiB,IAAI,CAAC,IAAI;YAC9B,gBAAgB,EAAK,IAAI,CAAC,UAAU;YACpC,KAAK,EAAgB,IAAI,CAAC,KAAK;YAC/B,IAAI,EAAiB,IAAI,CAAC,WAAW;YACrC,MAAM,EAAe,IAAI,CAAC,MAAM;SACnC,CAAC;IACN,CAAC;IACL,sBAAC;AAAD,CA1CA,AA0CC,IAAA;AA1CY,0CAAe","file":"campaignAdapter.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { encodeFilter, decodeFilter } from \"../../common/functions\";\nimport {\n    UpdateCampaign as apiCampaign,\n    UpdateCampaignPostRequest as apiCampaignAdd,\n    UpdateCampaignPutRequest as apiCampaignUpdate\n} from \"../../_api/update_service\";\nimport { Filters } from \"../../deviceDirectory/filters\";\nimport { AddCampaignObject, UpdateCampaignObject } from \"../types\";\nimport { UpdateApi } from \"../updateApi\";\nimport { Campaign } from \"./campaign\";\n\n/**\n * Campaign Adapter\n */\nexport class CampaignAdapter {\n\n    public static map(from: apiCampaign, api: UpdateApi): Campaign {\n        return new Campaign({\n            deviceFilter:        decodeFilter(from.device_filter, Filters.DEVICE_FILTER_MAP, Filters.NESTED_FILTERS),\n            createdAt:           from.created_at,\n            description:         from.description,\n            finishedAt:          from.finished,\n            id:                  from.id,\n            manifestId:          from.root_manifest_id,\n            manifestUrl:         from.root_manifest_url,\n            name:                from.name,\n            startedAt:           from.started_at,\n            state:               from.state,\n            scheduledAt:         from.when,\n            updatedAt:           from.updated_at\n        }, api);\n    }\n\n    public static addMap(from: AddCampaignObject): apiCampaignAdd {\n        return {\n            description:         from.description,\n            device_filter:       encodeFilter(from.deviceFilter, Filters.DEVICE_FILTER_MAP, Filters.NESTED_FILTERS) || null,\n            name:                from.name,\n            root_manifest_id:    from.manifestId,\n            state:               from.state,\n            when:                from.scheduledAt,\n            object:              from.object,\n        };\n    }\n\n    public static updateMap(from: UpdateCampaignObject): apiCampaignUpdate {\n        return {\n            description:         from.description,\n            device_filter:       encodeFilter(from.deviceFilter, Filters.DEVICE_FILTER_MAP, Filters.NESTED_FILTERS) || null,\n            name:                from.name,\n            root_manifest_id:    from.manifestId,\n            state:               from.state,\n            when:                from.scheduledAt,\n            object:              from.object,\n        };\n    }\n}\n"],"sourceRoot":"../../../src"}