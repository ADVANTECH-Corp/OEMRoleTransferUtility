{"version":3,"sources":["common/pagination.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAIH,qJAAqJ;AACxI,QAAA,aAAa,GAAG,UACzB,OAAgE,EAChE,OAAsC;IAEtC,IAAM,KAAK,GAAG,UAAC,KAAc;QACzB,MAAM,CAAC,OAAO,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC;aACpB,IAAI,CAAC,UAAC,EAAiB;gBAAf,cAAI,EAAE,oBAAO;YAClB,IAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,EAAM;oBAAJ,UAAE;gBAAO,OAAA,OAAO,CAAC,EAAE,CAAC;YAAX,CAAW,CAAC,CAAC;YAE1D,oDAAoD;YACpD,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;iBAC9B,IAAI,CAAC;gBACF,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC9D,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACX,CAAC,CAAC;IAEF,MAAM,CAAC,KAAK,EAAE,CAAC;AACnB,CAAC,CAAC","file":"pagination.js","sourcesContent":["/*\n * Mbed Cloud JavaScript SDK\n * Copyright Arm Limited 2018\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ListResponse } from \"./listResponse\";\n\n// Run `execute` for all items returned from getPage, one page at a time. If any call to getPage or execute fails, the resulting promise is rejected.\nexport const executeForAll = <T extends {id: string}>(\n    getPage: (options: {after?: string}) => Promise<ListResponse<T>>,\n    execute: (id: string) => Promise<void>\n)  => {\n    const recur = (after?: string): Promise<void> => {\n        return getPage({ after })\n            .then(({ data, hasMore }) => {\n                const executePromises = data.map(({ id }) => execute(id));\n\n                // Execute for all items in current page, then recur\n                return Promise.all(executePromises)\n                    .then(() => {\n                        return hasMore ? recur(data[ data.length - 1 ].id) : null;\n                    });\n            });\n    };\n\n    return recur();\n};\n"],"sourceRoot":"../../src"}